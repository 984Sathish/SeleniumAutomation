<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="50" passed="50" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-10T19:00:26 IST" name="Suite" finished-at="2024-01-10T19:17:28 IST" duration-ms="1022153">
    <groups>
    </groups>
    <test started-at="2024-01-10T19:00:26 IST" name="Test" finished-at="2024-01-10T19:17:28 IST" duration-ms="1022153">
      <class name="Miscellaneous.BrokenLink">
        <test-method signature="brokenLink()[pri:0, instance:Miscellaneous.BrokenLink@6399551e]" started-at="2024-01-10T19:16:26 IST" name="brokenLink" finished-at="2024-01-10T19:17:28 IST" duration-ms="62121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- brokenLink -->
      </class> <!-- Miscellaneous.BrokenLink -->
      <class name="ClientApplication.POMClientAppWithJSON">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ClientApplication.POMClientAppWithJSON@79d94571]" started-at="2024-01-10T19:04:30 IST" name="launchApplication" finished-at="2024-01-10T19:04:45 IST" duration-ms="14948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseOrder(java.util.HashMap)[pri:0, instance:ClientApplication.POMClientAppWithJSON@79d94571]" started-at="2024-01-10T19:04:45 IST" name="purchaseOrder" data-provider="getData" finished-at="2024-01-10T19:05:19 IST" duration-ms="33786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Satz@984, product=IPHONE 13 PRO, username=sathishsuresh984@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseOrder -->
        <test-method is-config="true" signature="closeDriverInstance()[pri:0, instance:ClientApplication.POMClientAppWithJSON@79d94571]" started-at="2024-01-10T19:05:19 IST" name="closeDriverInstance" finished-at="2024-01-10T19:05:19 IST" duration-ms="539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriverInstance -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ClientApplication.POMClientAppWithJSON@79d94571]" started-at="2024-01-10T19:05:19 IST" name="launchApplication" finished-at="2024-01-10T19:05:32 IST" duration-ms="12893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseOrder(java.util.HashMap)[pri:0, instance:ClientApplication.POMClientAppWithJSON@79d94571]" started-at="2024-01-10T19:05:32 IST" name="purchaseOrder" data-provider="getData" finished-at="2024-01-10T19:06:04 IST" duration-ms="31660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Satz@984, product=ADIDAS ORIGINAL, username=sathishsuresh984@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseOrder -->
        <test-method is-config="true" signature="closeDriverInstance()[pri:0, instance:ClientApplication.POMClientAppWithJSON@79d94571]" started-at="2024-01-10T19:06:04 IST" name="closeDriverInstance" finished-at="2024-01-10T19:06:13 IST" duration-ms="8821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriverInstance -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ClientApplication.POMClientAppWithJSON@79d94571]" started-at="2024-01-10T19:06:13 IST" name="launchApplication" finished-at="2024-01-10T19:06:27 IST" duration-ms="14453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="VerifyOrder()[pri:0, instance:ClientApplication.POMClientAppWithJSON@79d94571]" started-at="2024-01-10T19:06:27 IST" name="VerifyOrder" finished-at="2024-01-10T19:06:41 IST" depends-on-methods="ClientApplication.POMClientAppWithJSON.purchaseOrder" duration-ms="13555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOrder -->
        <test-method is-config="true" signature="closeDriverInstance()[pri:0, instance:ClientApplication.POMClientAppWithJSON@79d94571]" started-at="2024-01-10T19:06:41 IST" name="closeDriverInstance" finished-at="2024-01-10T19:06:41 IST" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriverInstance -->
      </class> <!-- ClientApplication.POMClientAppWithJSON -->
      <class name="Stream.Filter">
        <test-method signature="filter()[pri:0, instance:Stream.Filter@67304a40]" started-at="2024-01-10T19:15:08 IST" name="filter" finished-at="2024-01-10T19:15:08 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filter -->
      </class> <!-- Stream.Filter -->
      <class name="Miscellaneous.Cookies">
        <test-method signature="addCookies()[pri:0, instance:Miscellaneous.Cookies@79351f41]" started-at="2024-01-10T19:15:08 IST" name="addCookies" finished-at="2024-01-10T19:15:52 IST" duration-ms="43918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCookies -->
      </class> <!-- Miscellaneous.Cookies -->
      <class name="Set.Hash_Set">
        <test-method signature="hashSet()[pri:0, instance:Set.Hash_Set@7642df8f]" started-at="2024-01-10T19:17:28 IST" name="hashSet" finished-at="2024-01-10T19:17:28 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hashSet -->
      </class> <!-- Set.Hash_Set -->
      <class name="Queue.Priority_Queue">
        <test-method signature="priorityQueue()[pri:0, instance:Queue.Priority_Queue@53bd8fca]" started-at="2024-01-10T19:17:28 IST" name="priorityQueue" finished-at="2024-01-10T19:17:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- priorityQueue -->
      </class> <!-- Queue.Priority_Queue -->
      <class name="Selenium4.PartialScreenshot">
        <test-method signature="screenshotPartial()[pri:0, instance:Selenium4.PartialScreenshot@55dfcc6]" started-at="2024-01-10T19:09:52 IST" name="screenshotPartial" finished-at="2024-01-10T19:09:59 IST" duration-ms="6816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotPartial -->
      </class> <!-- Selenium4.PartialScreenshot -->
      <class name="Selenium4.RelativeLocators">
        <test-method signature="relativeLocator()[pri:0, instance:Selenium4.RelativeLocators@71454b9d]" started-at="2024-01-10T19:12:41 IST" name="relativeLocator" finished-at="2024-01-10T19:12:52 IST" duration-ms="10225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- relativeLocator -->
      </class> <!-- Selenium4.RelativeLocators -->
      <class name="Scrolling.WindowScrolling">
        <test-method signature="scrolling()[pri:0, instance:Scrolling.WindowScrolling@2fc6f97f]" started-at="2024-01-10T19:14:27 IST" name="scrolling" finished-at="2024-01-10T19:15:08 IST" duration-ms="41380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrolling -->
      </class> <!-- Scrolling.WindowScrolling -->
      <class name="Selenium4.GetConsoleLogs">
        <test-method signature="getConsoleLogs()[pri:0, instance:Selenium4.GetConsoleLogs@93cf163]" started-at="2024-01-10T19:10:28 IST" name="getConsoleLogs" finished-at="2024-01-10T19:10:48 IST" duration-ms="19765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getConsoleLogs -->
      </class> <!-- Selenium4.GetConsoleLogs -->
      <class name="Set.Linked_HashSet">
        <test-method signature="linkedHashSet()[pri:0, instance:Set.Linked_HashSet@3e30646a]" started-at="2024-01-10T19:17:28 IST" name="linkedHashSet" finished-at="2024-01-10T19:17:28 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedHashSet -->
      </class> <!-- Set.Linked_HashSet -->
      <class name="Selenium4.WindowHandle">
        <test-method signature="handleChildFrame()[pri:0, instance:Selenium4.WindowHandle@7a1a3478]" started-at="2024-01-10T19:09:13 IST" name="handleChildFrame" finished-at="2024-01-10T19:09:42 IST" duration-ms="29208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleChildFrame -->
      </class> <!-- Selenium4.WindowHandle -->
      <class name="List.StackList">
        <test-method signature="stackList()[pri:0, instance:List.StackList@5d5f10b2]" started-at="2024-01-10T19:17:28 IST" name="stackList" finished-at="2024-01-10T19:17:28 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackList -->
      </class> <!-- List.StackList -->
      <class name="Selenium4.GetNetworkLog">
        <test-method signature="getNetworkLogs()[pri:0, instance:Selenium4.GetNetworkLog@1852a3ff]" started-at="2024-01-10T19:10:48 IST" name="getNetworkLogs" finished-at="2024-01-10T19:11:08 IST" duration-ms="20135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNetworkLogs -->
      </class> <!-- Selenium4.GetNetworkLog -->
      <class name="Selenium4.CDPCommandTest">
        <test-method signature="SetEmulation()[pri:0, instance:Selenium4.CDPCommandTest@495b0487]" started-at="2024-01-10T19:09:42 IST" name="SetEmulation" finished-at="2024-01-10T19:09:52 IST" duration-ms="9934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetEmulation -->
      </class> <!-- Selenium4.CDPCommandTest -->
      <class name="ClientApplication.POMClientAppEnd2EndFlow">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ClientApplication.POMClientAppEnd2EndFlow@76012793]" started-at="2024-01-10T19:02:46 IST" name="launchApplication" finished-at="2024-01-10T19:03:00 IST" duration-ms="14308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseOrder()[pri:0, instance:ClientApplication.POMClientAppEnd2EndFlow@76012793]" started-at="2024-01-10T19:03:00 IST" name="purchaseOrder" finished-at="2024-01-10T19:03:36 IST" duration-ms="36108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseOrder -->
        <test-method is-config="true" signature="closeDriverInstance()[pri:0, instance:ClientApplication.POMClientAppEnd2EndFlow@76012793]" started-at="2024-01-10T19:03:36 IST" name="closeDriverInstance" finished-at="2024-01-10T19:03:37 IST" duration-ms="635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriverInstance -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ClientApplication.POMClientAppEnd2EndFlow@76012793]" started-at="2024-01-10T19:03:37 IST" name="launchApplication" finished-at="2024-01-10T19:03:51 IST" duration-ms="13941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="VerifyOrder()[pri:0, instance:ClientApplication.POMClientAppEnd2EndFlow@76012793]" started-at="2024-01-10T19:03:51 IST" name="VerifyOrder" finished-at="2024-01-10T19:04:05 IST" depends-on-methods="ClientApplication.POMClientAppEnd2EndFlow.purchaseOrder" duration-ms="14167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOrder -->
        <test-method is-config="true" signature="closeDriverInstance()[pri:0, instance:ClientApplication.POMClientAppEnd2EndFlow@76012793]" started-at="2024-01-10T19:04:05 IST" name="closeDriverInstance" finished-at="2024-01-10T19:04:05 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriverInstance -->
      </class> <!-- ClientApplication.POMClientAppEnd2EndFlow -->
      <class name="Selenium4.SetGeoLocation">
        <test-method signature="geoLocation()[pri:0, instance:Selenium4.SetGeoLocation@222eb8aa]" started-at="2024-01-10T19:09:59 IST" name="geoLocation" finished-at="2024-01-10T19:10:28 IST" duration-ms="29336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- geoLocation -->
      </class> <!-- Selenium4.SetGeoLocation -->
      <class name="ClientApplication.ClientAppEnd2EndFlow">
        <test-method signature="OrderPurchase()[pri:0, instance:ClientApplication.ClientAppEnd2EndFlow@635572a7]" started-at="2024-01-10T19:04:05 IST" name="OrderPurchase" finished-at="2024-01-10T19:04:29 IST" duration-ms="24080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderPurchase -->
      </class> <!-- ClientApplication.ClientAppEnd2EndFlow -->
      <class name="Miscellaneous.TakeScreenshot">
        <test-method signature="getScreenshot()[pri:0, instance:Miscellaneous.TakeScreenshot@1c32386d]" started-at="2024-01-10T19:15:52 IST" name="getScreenshot" finished-at="2024-01-10T19:16:26 IST" duration-ms="33772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
      </class> <!-- Miscellaneous.TakeScreenshot -->
      <class name="Stream.Collector">
        <test-method signature="collectList()[pri:0, instance:Stream.Collector@3d2ee678]" started-at="2024-01-10T19:15:08 IST" name="collectList" finished-at="2024-01-10T19:15:08 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- collectList -->
      </class> <!-- Stream.Collector -->
      <class name="Stream.JavaStream">
        <test-method signature="stream()[pri:0, instance:Stream.JavaStream@2d6764b2]" started-at="2024-01-10T19:15:08 IST" name="stream" finished-at="2024-01-10T19:15:08 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stream -->
      </class> <!-- Stream.JavaStream -->
      <class name="Selenium4.FailRequest">
        <test-method signature="reqFail()[pri:0, instance:Selenium4.FailRequest@7203c7ff]" started-at="2024-01-10T19:11:08 IST" name="reqFail" finished-at="2024-01-10T19:11:27 IST" duration-ms="18395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reqFail -->
      </class> <!-- Selenium4.FailRequest -->
      <class name="Deque.Array_Deque">
        <test-method signature="arrayDeque()[pri:0, instance:Deque.Array_Deque@1e0f9063]" started-at="2024-01-10T19:17:28 IST" name="arrayDeque" finished-at="2024-01-10T19:17:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayDeque -->
      </class> <!-- Deque.Array_Deque -->
      <class name="SortedSet.Tree_Set">
        <test-method signature="treeSet()[pri:0, instance:SortedSet.Tree_Set@5cde6747]" started-at="2024-01-10T19:17:28 IST" name="treeSet" finished-at="2024-01-10T19:17:28 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treeSet -->
      </class> <!-- SortedSet.Tree_Set -->
      <class name="Selenium4.MockRequest">
        <test-method signature="mockReq()[pri:0, instance:Selenium4.MockRequest@4b6690c0]" started-at="2024-01-10T19:11:48 IST" name="mockReq" finished-at="2024-01-10T19:12:06 IST" duration-ms="17945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mockReq -->
      </class> <!-- Selenium4.MockRequest -->
      <class name="Selenium4.BlockRequest">
        <test-method signature="BlockImageRequest()[pri:0, instance:Selenium4.BlockRequest@eda25e5]" started-at="2024-01-10T19:12:52 IST" name="BlockImageRequest" finished-at="2024-01-10T19:12:56 IST" duration-ms="4463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BlockImageRequest -->
      </class> <!-- Selenium4.BlockRequest -->
      <class name="List.VectorList">
        <test-method signature="vectorList()[pri:0, instance:List.VectorList@13d73fa]" started-at="2024-01-10T19:17:28 IST" name="vectorList" finished-at="2024-01-10T19:17:28 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vectorList -->
      </class> <!-- List.VectorList -->
      <class name="Selenium4.NetworkSpeed">
        <test-method signature="changeNetworkSpeed()[pri:0, instance:Selenium4.NetworkSpeed@25bfcafd]" started-at="2024-01-10T19:11:27 IST" name="changeNetworkSpeed" finished-at="2024-01-10T19:11:48 IST" duration-ms="21945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeNetworkSpeed -->
      </class> <!-- Selenium4.NetworkSpeed -->
      <class name="Stream.Map">
        <test-method signature="mapStream()[pri:0, instance:Stream.Map@35f26e72]" started-at="2024-01-10T19:15:08 IST" name="mapStream" finished-at="2024-01-10T19:15:08 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapStream -->
      </class> <!-- Stream.Map -->
      <class name="WaitSynchronization.ImplicitWait">
        <test-method signature="implicitWait()[pri:0, instance:WaitSynchronization.ImplicitWait@623e088f]" started-at="2024-01-10T19:13:20 IST" name="implicitWait" finished-at="2024-01-10T19:13:41 IST" duration-ms="21488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- implicitWait -->
      </class> <!-- WaitSynchronization.ImplicitWait -->
      <class name="List.Array">
        <test-method signature="arrayList()[pri:0, instance:List.Array@5023bb8b]" started-at="2024-01-10T19:17:28 IST" name="arrayList" finished-at="2024-01-10T19:17:28 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayList -->
      </class> <!-- List.Array -->
      <class name="ClientApplication.POMClientAppDataProvider">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ClientApplication.POMClientAppDataProvider@4dd02341]" started-at="2024-01-10T19:06:41 IST" name="launchApplication" finished-at="2024-01-10T19:06:53 IST" duration-ms="11763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseOrder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:ClientApplication.POMClientAppDataProvider@4dd02341]" started-at="2024-01-10T19:06:53 IST" name="purchaseOrder" data-provider="getData" finished-at="2024-01-10T19:07:26 IST" duration-ms="33145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sathishsuresh984@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Satz@984]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[IPHONE 13 PRO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseOrder -->
        <test-method is-config="true" signature="closeDriverInstance()[pri:0, instance:ClientApplication.POMClientAppDataProvider@4dd02341]" started-at="2024-01-10T19:07:26 IST" name="closeDriverInstance" finished-at="2024-01-10T19:07:49 IST" duration-ms="22920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriverInstance -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ClientApplication.POMClientAppDataProvider@4dd02341]" started-at="2024-01-10T19:07:49 IST" name="launchApplication" finished-at="2024-01-10T19:08:04 IST" duration-ms="14991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseOrder(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:ClientApplication.POMClientAppDataProvider@4dd02341]" started-at="2024-01-10T19:08:04 IST" name="purchaseOrder" data-provider="getData" finished-at="2024-01-10T19:08:35 IST" duration-ms="31654" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sathishsuresh984@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Satz@984]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ADIDAS ORIGINAL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseOrder -->
        <test-method is-config="true" signature="closeDriverInstance()[pri:0, instance:ClientApplication.POMClientAppDataProvider@4dd02341]" started-at="2024-01-10T19:08:35 IST" name="closeDriverInstance" finished-at="2024-01-10T19:08:38 IST" duration-ms="2736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriverInstance -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ClientApplication.POMClientAppDataProvider@4dd02341]" started-at="2024-01-10T19:08:38 IST" name="launchApplication" finished-at="2024-01-10T19:08:53 IST" duration-ms="14985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="VerifyOrder()[pri:0, instance:ClientApplication.POMClientAppDataProvider@4dd02341]" started-at="2024-01-10T19:08:53 IST" name="VerifyOrder" finished-at="2024-01-10T19:08:55 IST" depends-on-methods="ClientApplication.POMClientAppDataProvider.purchaseOrder" duration-ms="1960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOrder -->
        <test-method is-config="true" signature="closeDriverInstance()[pri:0, instance:ClientApplication.POMClientAppDataProvider@4dd02341]" started-at="2024-01-10T19:08:55 IST" name="closeDriverInstance" finished-at="2024-01-10T19:08:55 IST" duration-ms="273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriverInstance -->
      </class> <!-- ClientApplication.POMClientAppDataProvider -->
      <class name="Stream.Limit">
        <test-method signature="limit()[pri:0, instance:Stream.Limit@49c6c24f]" started-at="2024-01-10T19:15:08 IST" name="limit" finished-at="2024-01-10T19:15:08 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- limit -->
      </class> <!-- Stream.Limit -->
      <class name="WaitSynchronization.ExplicitWait">
        <test-method signature="explicitWait()[pri:0, instance:WaitSynchronization.ExplicitWait@39fcbef6]" started-at="2024-01-10T19:13:41 IST" name="explicitWait" finished-at="2024-01-10T19:14:06 IST" duration-ms="24296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- explicitWait -->
      </class> <!-- WaitSynchronization.ExplicitWait -->
      <class name="Selenium4.HandlePopupByUrl">
        <test-method signature="handlePopup()[pri:0, instance:Selenium4.HandlePopupByUrl@3212a8d7]" started-at="2024-01-10T19:08:55 IST" name="handlePopup" finished-at="2024-01-10T19:09:13 IST" duration-ms="17723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handlePopup -->
      </class> <!-- Selenium4.HandlePopupByUrl -->
      <class name="Stream.StreamDistinct">
        <test-method signature="streamDistinct()[pri:0, instance:Stream.StreamDistinct@6fe1b4fb]" started-at="2024-01-10T19:15:08 IST" name="streamDistinct" finished-at="2024-01-10T19:15:08 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- streamDistinct -->
      </class> <!-- Stream.StreamDistinct -->
      <class name="Stream.StreamConcat">
        <test-method signature="streamConcat()[pri:0, instance:Stream.StreamConcat@6179e425]" started-at="2024-01-10T19:15:08 IST" name="streamConcat" finished-at="2024-01-10T19:15:08 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- streamConcat -->
      </class> <!-- Stream.StreamConcat -->
      <class name="Selenium4.MobileEmulator">
        <test-method signature="emulatorMobile()[pri:0, instance:Selenium4.MobileEmulator@7cf6a5f9]" started-at="2024-01-10T19:12:56 IST" name="emulatorMobile" finished-at="2024-01-10T19:13:20 IST" duration-ms="23879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emulatorMobile -->
      </class> <!-- Selenium4.MobileEmulator -->
      <class name="WaitSynchronization.FluentWaitClass">
        <test-method signature="fluentWait()[pri:0, instance:WaitSynchronization.FluentWaitClass@66565121]" started-at="2024-01-10T19:14:06 IST" name="fluentWait" finished-at="2024-01-10T19:14:27 IST" duration-ms="20796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fluentWait -->
      </class> <!-- WaitSynchronization.FluentWaitClass -->
      <class name="Selenium4.GetDimension">
        <test-method signature="getDimension()[pri:0, instance:Selenium4.GetDimension@2a76840c]" started-at="2024-01-10T19:12:30 IST" name="getDimension" finished-at="2024-01-10T19:12:41 IST" duration-ms="11434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDimension -->
      </class> <!-- Selenium4.GetDimension -->
      <class name="Selenium4.BasicAuthentication">
        <test-method signature="BasicAuth()[pri:0, instance:Selenium4.BasicAuthentication@46268f08]" started-at="2024-01-10T19:12:06 IST" name="BasicAuth" finished-at="2024-01-10T19:12:30 IST" duration-ms="23561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BasicAuth -->
      </class> <!-- Selenium4.BasicAuthentication -->
      <class name="ClientApplication.POMClientAppWithHashMap">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ClientApplication.POMClientAppWithHashMap@7502291e]" started-at="2024-01-10T19:00:26 IST" name="launchApplication" finished-at="2024-01-10T19:00:40 IST" duration-ms="14322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseOrder(java.util.HashMap)[pri:0, instance:ClientApplication.POMClientAppWithHashMap@7502291e]" started-at="2024-01-10T19:00:40 IST" name="purchaseOrder" data-provider="getData" finished-at="2024-01-10T19:01:14 IST" duration-ms="34252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Satz@984, product=IPHONE 13 PRO, username=sathishsuresh984@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseOrder -->
        <test-method is-config="true" signature="closeDriverInstance()[pri:0, instance:ClientApplication.POMClientAppWithHashMap@7502291e]" started-at="2024-01-10T19:01:14 IST" name="closeDriverInstance" finished-at="2024-01-10T19:01:21 IST" duration-ms="6486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriverInstance -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ClientApplication.POMClientAppWithHashMap@7502291e]" started-at="2024-01-10T19:01:21 IST" name="launchApplication" finished-at="2024-01-10T19:01:34 IST" duration-ms="13126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseOrder(java.util.HashMap)[pri:0, instance:ClientApplication.POMClientAppWithHashMap@7502291e]" started-at="2024-01-10T19:01:34 IST" name="purchaseOrder" data-provider="getData" finished-at="2024-01-10T19:02:10 IST" duration-ms="35696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Satz@984, product=ADIDAS ORIGINAL, username=sathishsuresh984@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseOrder -->
        <test-method is-config="true" signature="closeDriverInstance()[pri:0, instance:ClientApplication.POMClientAppWithHashMap@7502291e]" started-at="2024-01-10T19:02:10 IST" name="closeDriverInstance" finished-at="2024-01-10T19:02:12 IST" duration-ms="1732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriverInstance -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:ClientApplication.POMClientAppWithHashMap@7502291e]" started-at="2024-01-10T19:02:12 IST" name="launchApplication" finished-at="2024-01-10T19:02:28 IST" duration-ms="16147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="VerifyOrder()[pri:0, instance:ClientApplication.POMClientAppWithHashMap@7502291e]" started-at="2024-01-10T19:02:28 IST" name="VerifyOrder" finished-at="2024-01-10T19:02:44 IST" depends-on-methods="ClientApplication.POMClientAppWithHashMap.purchaseOrder" duration-ms="16513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOrder -->
        <test-method is-config="true" signature="closeDriverInstance()[pri:0, instance:ClientApplication.POMClientAppWithHashMap@7502291e]" started-at="2024-01-10T19:02:44 IST" name="closeDriverInstance" finished-at="2024-01-10T19:02:46 IST" duration-ms="1707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriverInstance -->
      </class> <!-- ClientApplication.POMClientAppWithHashMap -->
      <class name="List.Linked">
        <test-method signature="linkedList()[pri:0, instance:List.Linked@74c79fa2]" started-at="2024-01-10T19:17:28 IST" name="linkedList" finished-at="2024-01-10T19:17:28 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedList -->
      </class> <!-- List.Linked -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
